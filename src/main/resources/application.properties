spring.datasource.driver=org.h2.Driver
spring.datasource.url=jdbc:h2:tcp://localhost/activiti-app-1.6.1
spring.datasource.username=alfresco
spring.datasource.password=alfresco


server.port=8091
server.contextPath=/activiti-analytics-spring-boot/api

spring.activiti.asyncExecutorActivate=false
spring.activiti.asyncExecutorEnabled=false

# The following 4 properties are not used if Elasticsearch is not started. 
# If you don't want to start an elasticsearch instance, comment those dependencies in pom.xml 
# If using the embedded elasticsearch that comes with APS, enable http.compression for this solution to work. 
# Please refer to https://github.com/cijujoseph/activiti-examples/blob/master/activiti-custom-data-model-sample/src/main/java/com/activiti/extension/bean/CustomESConfig.java for an example class on enabling this on APS server
spring.data.elasticsearch.properties.http.enabled=true
spring.data.elasticsearch.properties.http.compression=true
spring.data.elasticsearch.properties.http.host=127.0.0.1
spring.data.elasticsearch.properties.http.port=9200

analytics.default.fromTimestamp=2017-06-30 00:00:00.000
analytics.excludedProcessList=test123%,testxx%
analytics.pollingInterval=0/10 * * * * ?

analytics.es.url=http://127.0.0.1:9200/
analytics.es.indexPrefix=bpmanalyticseventlog

analytics.isEnterprise=false

analytics.sql.queryBatchSize=500
# Event table name. possible values are ACT_EVT_LOG or PROCESSED_ACTIVITI_EVENTS 
# set table name as PROCESSED_ACTIVITI_EVENTS for APS customers if event processing is enabled and events are moved to another table after processing)
analytics.sql.eventTable=ACT_EVT_LOG  
# analytics.sql.eventDataQuery adjust the query according to your database. 
#Query for H2/PostgreSQL and if table is PROCESSED_ACTIVITI_EVENTS
#analytics.sql.eventDataQuery=select LOG_NR_ , TYPE_ AS "TYPE_", PROC_DEF_ID_ AS "PROC_DEF_ID_", PROC_INST_ID_ AS "PROC_INST_ID_", TASK_ID_ AS "TASK_ID_", TIME_STAMP_ AS "TIME_STAMP_", USER_ID_ AS "USER_ID_", DATA_ AS "DATA_" FROM PROCESSED_ACTIVITI_EVENTS
#Query for H2 and if table is ACT_EVT_LOG
analytics.sql.eventDataQuery=select LOG_NR_ , TYPE_ AS "TYPE_", PROC_DEF_ID_ AS "PROC_DEF_ID_", PROC_INST_ID_ AS "PROC_INST_ID_", TASK_ID_ AS "TASK_ID_", TIME_STAMP_ AS "TIME_STAMP_", USER_ID_ AS "USER_ID_", UTF8TOSTRING(DATA_) AS "DATA_" FROM ACT_EVT_LOG
#Query for PostgreSQL and if table is ACT_EVT_LOG
#analytics.sql.eventDataQuery=select LOG_NR_ , TYPE_ AS "TYPE_", PROC_DEF_ID_ AS "PROC_DEF_ID_", PROC_INST_ID_ AS "PROC_INST_ID_", TASK_ID_ AS "TASK_ID_", TIME_STAMP_ AS "TIME_STAMP_", USER_ID_ AS "USER_ID_", convert_from(DATA_::bytea, 'UTF8') AS "DATA_" FROM ACT_EVT_LOG